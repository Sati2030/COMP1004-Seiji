<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/seijisato/Documents/Nottingham/COMP1004/Lab3/comp1004Lab3.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1204"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ALBUM" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="0"/></sort><column_widths><column index="1" value="65"/><column index="2" value="111"/><column index="3" value="67"/><column index="4" value="73"/><column index="5" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ALBUMTRACKS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="50"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ARTIST" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="70"/><column index="3" value="82"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ARTISTALBUM" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ARTISTSONG" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="50"/><column index="2" value="52"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="GENRE" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="54"/><column index="2" value="72"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="47"/><column index="2" value="27"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">create TABLE IF NOT EXISTS ARTIST(
	artist_id INTEGER PRIMARY KEY AUTOINCREMENT,
	artist_name TEXT UNIQUE,
	artist_country TEXT
);

create TABLE IF NOT EXISTS ARTISTALBUM(
	album_id INTEGER,
	artist_id INTEGER,
	FOREIGN KEY (album_id) REFERENCES ALBUM(album_id)
	FOREIGN KEY (artist_id) REFERENCES ARTIST(artist_id)
);

create TABLE IF NOT EXISTS ALBUM(
	almbum_id INTEGER PRIMARY KEY  AUTOINCREMENT,
	album_record_label TEXT,
	album_title TEXT,
	album_price INTEGER,
	genre_id INTEGER,
	FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

create TABLE IF NOT EXISTS	ALBUMTRACKS(
	album_id INTEGER,
	song_id INTEGER,
	FOREIGN KEY (album_id) REFERENCES ALBUM(album_id),
	FOREIGN KEY (song_id) REFERENCES SONG(song_id)
);

create TABLE  IF NOT EXISTS SONG(
	song_id INTEGER PRIMARY KEY AUTOINCREMENT,
	song_title TEXT UNIQUE,
	genre_id INTEGER,
	song_is_cover INTEGER,
	song_length TEXT,
	song_version INTEGER,
	FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

create TABLE IF NOT EXISTS ARTISTSONG(
	song_id INTEGER,
	artist_id INTEGER,
	FOREIGN KEY (song_id) REFERENCES SONG(song_id),
	FOREIGN KEY (artist_id) REFERENCES ARTIST(artist_id)
);

create TABLE IF NOT EXISTS GENRE(
	genre_id INTEGER PRIMARY KEY AUTOINCREMENT,
	genre_name TEXT UNIQUE
);

INSERT INTO GENRE(genre_id,genre_name)
VALUES (4,&quot;Hip-Hop&quot;)</sql><current_tab id="0"/></tab_sql></sqlb_project>
